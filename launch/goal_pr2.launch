<launch>
    <arg name="debug" default="false"/>

    <param name="robot_description" command="$(find xacro)/xacro.py '$(find pr2_description)/robots/pr2.urdf.xacro'"/>

    <arg unless="$(arg debug)" name="launch-prefix" value=""/>
    <arg     if="$(arg debug)" name="launch-prefix" value="gdb ex --args"/>

    <node pkg="learning_egraphs" type="callPlanner" name="call_planner"
            launch-prefix="$(arg launch-prefix)" output="screen">
        <param name="planning_frame" value="odom_combined"/>

        <!-- 1. robot model (for planning) -->
        <rosparam param="robot_model">
            group_name: right_arm
            planning_joints:
                r_shoulder_pan_joint
                r_shoulder_lift_joint
                r_upper_arm_roll_joint
                r_elbow_flex_joint
                r_forearm_roll_joint
                r_wrist_flex_joint
                r_wrist_roll_joint
            planning_link:
                r_gripper_palm_link
            kinematics_frame:
                torso_lift_link
            chain_tip_link:
                r_gripper_palm_link
        </rosparam>

        <!-- collision checking -->
        <rosparam command="load" file="$(find sbpl_collision_checking_test)/config/collision_model_pr2.yaml"/>

        <!-- planner params -->
        <rosparam command="load" file="$(find learning_egraphs)/config/pr2_right_arm.yaml"/>
        <param name="planning/mprim_filename" value="$(find learning_egraphs)/config/pr2.mprim"/>

        <!-- 2. scene -->
        <!-- 2.1 robot state -->
        <rosparam command="load" file="$(find learning_egraphs)/experiments/pr2_goal.yaml"/>

        <!-- 2.2 world state -->
        <param name="object_filename" value="$(find learning_egraphs)/env/tabletop.env"/>

        <!-- 3. scenario -->
    </node>
</launch>

